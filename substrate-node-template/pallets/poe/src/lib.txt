#![cfg_attr(not(feature = "std"), no_std)]

// 将poe下的模块导出
pub use pallet::*;

#[frame_support::pallet]
pub mod pallet {
    // 导入frame_support下的pallet_prelude模块
    // 引入预定义的依赖，包括一些常用的类型和宏
    use frame_support::pallet_prelude::*;
    use frame_system::pallet_prelude::*;

    #[pallet::config]
    pub trait Config: frame_system::Config {
        // 声明一个关联类型，用于存储存证的最大长度
        /// The maximum length of a claim that can be added to the blockchain
        #[pallet::constant]     // 标注这是一个常量
        type MaxClaimLength: Get<u32>;
        // From<Event<Self>>表示这个类型可以从Event<Self>转换而来
        type RuntimeEvent: From<Event<Self>> + IsType<<Self as frame_system::Config>::RuntimeEvent>;
    }

    #[pallet::pallet]
    #[pallet::generate_store(pub(super) trait Store)]
    pub struct Pallet<T>(_); // 一个元组结构体，该元组结构体只有一个字段，类型为T，但没有命名。即不关心或不需要这个值。

    pub type Proofs<T: Config> = StorageMap<
        _, 
        Blake2_128Concat, 
        BoundedVec<u8, T::MaxClaimLength>,
        (T::AccountId, T::BlockNumer),
    >;
}